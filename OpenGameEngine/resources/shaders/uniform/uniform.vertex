#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aColor;
layout (location = 2) in vec2 aTexCoord;

out vec2 texCoord;
out vec3 color;


// Define the UBO binding point
layout(std140, binding = 0) uniform Matrices {
	// mat4² or mat4 * mat4 < - > size bytes
    mat4 projection; 
    mat4 view;  
};

uniform  mat4 model;

void main () 
{
	gl_Position = projection * view * model * vec4(aPos, 1.0f);
	color = aColor;
	texCoord = aTexCoord;
}